# Generated by Django 4.0.5 on 2022-06-02 14:25

from django.db import migrations, models
import django.db.models.deletion
import letters.models
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CadNum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Кадастровый номер',
                'verbose_name_plural': 'Кадастровые номера',
            },
        ),
        migrations.CreateModel(
            name='Executor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=64, verbose_name='Имя')),
                ('patronimic', models.CharField(max_length=64, verbose_name='Отчество')),
            ],
            options={
                'verbose_name': 'Подписано/Исполнитель',
                'verbose_name_plural': 'Подписано/Исполнители',
                'ordering': ('surname', 'name'),
            },
        ),
        migrations.CreateModel(
            name='LetterType',
            fields=[
                ('index', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=127)),
                ('abbr', models.CharField(max_length=8)),
                ('folder', models.CharField(default='TMP', max_length=127)),
                ('url', models.CharField(max_length=127)),
            ],
            options={
                'verbose_name': 'Тип письма',
                'verbose_name_plural': 'Типы писем',
            },
        ),
        migrations.CreateModel(
            name='WayOfDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name': 'Способ отправки',
                'verbose_name_plural': 'Способы отправки',
            },
        ),
        migrations.CreateModel(
            name='WaterObj',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='letters.waterobj', verbose_name='Относится к категории')),
            ],
            options={
                'verbose_name': 'Водный объект',
                'verbose_name_plural': 'Водные объекты',
            },
        ),
        migrations.CreateModel(
            name='Thematics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='letters.thematics', verbose_name='Относится к категории')),
            ],
            options={
                'verbose_name': 'Тематика',
                'verbose_name_plural': 'Тематики',
            },
        ),
        migrations.CreateModel(
            name='GeoTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='letters.geotag', verbose_name='Относится к категории')),
            ],
            options={
                'verbose_name': 'Географическая привязка',
                'verbose_name_plural': 'Географическая привязка',
            },
        ),
        migrations.CreateModel(
            name='Forestry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='letters.forestry', verbose_name='Относится к категории')),
            ],
            options={
                'verbose_name': 'Объект Лесного Фонда',
                'verbose_name_plural': 'Объекты Лесного Фонда',
            },
        ),
        migrations.CreateModel(
            name='Counterparty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='letters.counterparty', verbose_name='Относится к категории')),
            ],
            options={
                'verbose_name': 'Контрагент',
                'verbose_name_plural': 'Контрагенты',
            },
        ),
        migrations.CreateModel(
            name='BaseLetter',
            fields=[
                ('number', models.CharField(max_length=64, primary_key=True, serialize=False, unique=True, verbose_name='Номер')),
                ('subj', models.TextField(verbose_name='Тема письма')),
                ('sign_date', models.DateField(verbose_name='Дата письма')),
                ('inbound_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='Входящий номер')),
                ('outgoing_number', models.CharField(blank=True, max_length=64, null=True, verbose_name='Исходящий номер')),
                ('signed_by', models.CharField(blank=True, max_length=255, null=True, verbose_name='Подписано')),
                ('contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Исполнитель в госоргане')),
                ('receive_date', models.DateField(blank=True, null=True, verbose_name='Дата получения')),
                ('send_date', models.DateField(blank=True, null=True, verbose_name='Дата отправки')),
                ('cipher', models.CharField(blank=True, max_length=255, verbose_name='Идентификатор темы')),
                ('tiff_file', models.FileField(blank=True, null=True, upload_to='Исходящие', verbose_name='Файл TIFF')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to=letters.models.get_upload_path, verbose_name='Файл PDF')),
                ('pagemaker_file', models.FileField(blank=True, null=True, upload_to='Исходящие', verbose_name='Файл Pagemaker')),
                ('completed', models.BooleanField(default=False, verbose_name='Завершено (применяется ко всей ветке переписки)')),
                ('inaction', models.BooleanField(default=False, verbose_name='Бездействие')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('cad_num', models.ManyToManyField(blank=True, to='letters.cadnum', verbose_name='Кадастровые Номера')),
                ('counterparty', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, to='letters.counterparty', verbose_name='Контрагент')),
                ('executor', models.ManyToManyField(blank=True, default=1, null=True, to='letters.executor', verbose_name='Подписано/Исполнитель')),
                ('forestry', mptt.fields.TreeManyToManyField(blank=True, to='letters.forestry', verbose_name='Объект Лесного Фонда')),
                ('geotag', mptt.fields.TreeManyToManyField(blank=True, to='letters.geotag', verbose_name='Географическая привязка')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='letters.baseletter', verbose_name='Ответ на')),
                ('thematics', mptt.fields.TreeManyToManyField(blank=True, to='letters.thematics', verbose_name='Тема')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='letters.lettertype')),
                ('waterobj', mptt.fields.TreeManyToManyField(blank=True, to='letters.waterobj', verbose_name='Водный объект')),
                ('way_of_delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='letters.wayofdelivery', verbose_name='Способ отправки')),
            ],
            options={
                'verbose_name': 'Письмо',
                'verbose_name_plural': '    Все письма',
            },
        ),
        migrations.CreateModel(
            name='IncomingLetter',
            fields=[
            ],
            options={
                'verbose_name': 'Входящее письмо',
                'verbose_name_plural': '   Входящие письма',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('letters.baseletter',),
        ),
        migrations.CreateModel(
            name='OutEcoLetter',
            fields=[
            ],
            options={
                'verbose_name': 'Исходящее письмо (экология)',
                'verbose_name_plural': '   Исходящие письма (экология)',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('letters.baseletter',),
        ),
    ]
